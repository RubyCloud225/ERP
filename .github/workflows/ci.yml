name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb_ci
          PGUSER: testuser
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      ConnectionStrings__PostgresTestDb: Host=localhost;Port=5432;Username=testuser;Password=testpass;Database=testdb_ci

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Setup PostgreSQL User
      run: |
        export PGPASSWORD=testpass
        psql -h localhost -U testuser -c "CREATE DATABASE testuser WITH OWNER testuser;"
        psql -h localhost -U testuser -c "CREATE ROLE testuser WITH LOGIN PASSWORD 'testpass';"
        psql -h localhost -U testuser -c "GRANT ALL PRIVILEGES ON DATABASE testdb_ci TO erpuser_test;"
        psql -h localhost -U testuser -c "CREATE SCHEMA IF NOT EXISTS erp_schema;"
        psql -h localhost -U testuser -c "GRANT ALL PRIVILEGES ON SCHEMA erp_schema TO erpuser_test;"

    - name: Wait for PostgreSQL
      run: |
        for i in {1..10}; do
          pg_isready -h localhost -U testuser && break
          sleep 3
        done

    - name: Test
      run: dotnet test --no-build --configuration Release

    - name: Build Docker image
      run: docker build -t erp:latest -f ERP/ERP/Dockerfile ERP/ERP